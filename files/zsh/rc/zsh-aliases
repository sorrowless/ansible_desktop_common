# Common aliases
alias cp='cp -iv'
alias rcp='rsync -v --progress'
alias rmv='rsync -v --progress --remove-source-files'
alias mv='mv -iv'
alias rm='rm -iv'
alias rmdir='rmdir -v'
alias ln='ln -v'
alias chmod="chmod -c"
alias chown="chown -c"
alias du='du -hc'
alias df='df -h'
alias svim='sudo vim'
alias scat='openssl x509 -text -noout -in'
alias s='systemctl'
alias sl='systemctl list-units'
alias ipsave='sudo iptables-save'
alias iptables-flush="sudo bash -lc 'iptables -F && iptables -X && iptables -t nat -F && iptables -t nat -X && iptables -t mangle -F && iptables -t mangle -X && iptables -t raw -F && iptables -t raw -X && iptables -t security -F && iptables -t security -X && iptables -P INPUT ACCEPT && iptables -P FORWARD ACCEPT && iptables -P OUTPUT ACCEPT'"
alias c='gcalcli'
alias ce='gcalcli agenda'
alias clouds='yq r ~/.config/openstack/clouds.yaml -j | jq '\''.clouds|keys[] as $k | "\($k): \(.[$k] | .auth.auth_url )"'\'' | sort'
if command -v colordiff > /dev/null 2>&1; then
    alias diff="colordiff -Nar"
    alias diffy="colordiff -Nar -y --suppress-common-lines"
else
    alias diff="diff -Nar"
    alias diffy="diff -Nar -y --suppress-common-lines"
fi
#alias grep='grep --colour=auto'
alias grep='ack'
alias egrep='egrep --colour=auto'
alias clip='fc -e - 2>/dev/null | xsel -i -b'
alias speedtest="curl -s -w 'Testing Website Response Time for: %{url_effective}\n\nLookup Time:\t\t%{time_namelookup}\nConnect Time:\t\t%{time_connect}\nPre-transfer Time:\t%{time_pretransfer}\nStart-transfer Time:\t%{time_starttransfer}\n\nTotal Time:\t\t%{time_total}\n' -o /dev/null"
alias gri='f() { grep -ri $1 ./ };f'
alias pcat='f() { cat $1 | pbcopy };f'
alias host_location='f() { curl https://ipvigilante.com/$1 2>/dev/null | jq -c "[ .data.ipv4, .data.continent_name, .data.country_name, if .data.city_name then .data.city_name else \"Unknown City\" end ]" };f'
alias shost_location='f() { shost -j $1 | jq -r ".[].hostname" | xargs -I {} curl https://ipvigilante.com/{} 2>/dev/null | jq -c "[ .data.ipv4, .data.continent_name, .data.country_name, if .data.city_name then .data.city_name else \"Unknown City\" end ]" };f'

# Translation aliases
alias enru='trans en:ru -b'
alias ruen='trans ru:en -b'
autotranslate() {
  local voc='abcdefjhigklmnopqrstuvwxyzABCDEFJHIGKLMNOPQRSTUVWXYZ'
  local words=$@
  local word=$1
  if [[ "$voc" =~ "${word:0:1}" ]]; then
    trans en:ru "${words}"
  else
    trans ru:en "${words}"
  fi
}
alias tran=autotranslate

# Docker aliases
alias dps='sudo docker ps'
alias dpsa='sudo docker ps --all'
alias dips='sudo docker images'

# Ansible aliases
alias aved='ansible-vault edit'
alias avdec='ansible-vault decrypt'
alias avenc='ansible-vault encrypt'
alias apl='ansible-playbook'
# alias for easy decrypt inline-vault vars. Use like
# unvault secrets.yaml globals.snow_ttl_export_account.username
alias unvault='f() { yq read $1 $2 | ansible-vault decrypt };f'

# Fzf aliases
fkill() {
  local pid
  pid=$(ps -ef | sed 1d | /usr/bin/fzf -m | awk '{print $2}')

  if [ "x$pid" != "x" ]
  then
    echo $pid | xargs kill -${1:-9}
  fi
}
alias fzf='fzf --height 70% --border --preview "head -100 {}"'
alias vif='vim $(fzf)'
alias open='xdg-open "$(fzf)" 2>/dev/null'

PLATFORM=`uname`
if [ "${PLATFORM}" != "Darwin" ]; then
  alias ls='ls --color=auto --human-readable --group-directories-first --classify'
  alias ip='ip -4 -o'
  alias rl='f() { readlink -f $1 | pbcopy };f'
else
  alias ls='gls -h --group-directories-first --color=auto'
  alias rl='f() { greadlink -f $1 | pbcopy };f'
fi
alias feh='feh -x -F -Y'
alias less='less -S'
# you know, that's funny ;)
alias fuck='sudo $(fc -ln -1)'
alias wttr='curl http://wttr.in/'
alias ac='asciinema'
alias fk='fkill'
alias kcal='khal calendar'
alias cn='khal new --alarms 5m'
alias vd='vdirsyncer'

getpass() {
  LEN="$1"
  NUM="$2"
  if [[ -z "$1" ]]; then
    LEN=32
  fi
  if [[ -z "$2" ]]; then
    NUM=1
  fi
  #pwgen -r"\"'!@#$%&*()<>/|{}[]\\\`:;=,~-_" -y -s "$LEN" "$NUM"
  pwgen -s "$LEN" "$NUM"
}

cjs() {
  HOST="$1"
  if [[ -z "$HOST" ]]; then
    echo "Cpecify host as a parameter"
    return 1
  fi
  curl $HOST 2>/dev/null | jq
}

ts() {
  tmux switch -t $(tmux ls | fzf | cut -d':' -f1)
}

# fs [FUZZY PATTERN] - Select selected tmux session
#   - Bypass fuzzy finder if there's only one match (--select-1)
#   - Exit if there's no match (--exit-0)
fs() {
  local session
  session=$(tmux list-sessions -F "#{session_name}" | \
    fzf --query="$1" --select-1 --exit-0) &&
  tmux switch-client -t "$session"
}

alias tf='terraform'

pull() {
  REMOTE="$1"
  if [[ -z "$REMOTE" ]]; then
    REMOTE="origin"
  fi
  git pull $REMOTE HEAD
}

push() {
  REMOTE="$1"
  if [[ -z "$REMOTE" ]]; then
    REMOTE="origin"
  fi
  git push $REMOTE HEAD
}
