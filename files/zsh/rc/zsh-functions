function who_am_i {
    # this function shows who I am and where I'm sitting now
    # %n is $USERNAME variable. %m is The hostname up to the first ‘.’
    echo "%{$fg[magenta]%}%n%{$reset_color%} %{$fg[white]%}at%{$reset_color%} %{$fg[yellow]%}%m%{$reset_color%}"
}

function happy_sad {
    # next line is just ternary operator in zsh. It shows ^_^ if last command was true
    # and o_O if it was false
    echo "%(?.%{$fg[green]%}^_^%{$reset_color%}.%{$fg[red]%}o_O%{$reset_color%})"
}

function red_green {
    # The same as for happy_sad but for '>' prompt
    echo "%(?.%{$fg[green]%}>%{$reset_color%}.%{$fg[red]%}>%{$reset_color%})"
}

function gitbranch {
    # find current git branch
    local ret="$(git rev-parse --abbrev-ref HEAD 2>/dev/null)"
    # and test that it is not null. If not null - then print it.
    [ $ret ] && echo "%{$reset_color%}[%{$fg[red]%}$ret%{$reset_color%}]"
}

# SSH-related funcs
check-ssh-agent() {
  if ! pgrep -u "$USER" ssh-agent > /dev/null; then
    echo "ssh-agent not running, prepare to run it"
    echo "creating data directory"
    SSH_INFO_DIR="/tmp/$USER/.ssh_data"
    mkdir -p $SSH_INFO_DIR
    chmod 700 $SSH_INFO_DIR
    echo "run ssh-agent"
    ssh-agent > $SSH_INFO_DIR/ssh_agent_last_data
    chmod 600 $SSH_INFO_DIR/ssh_agent_last_data
    echo "successfully ran ssh-agent"
  fi
  if [[ ! "$SSH_AUTH_SOCK" ]]; then
    SSH_INFO_DIR="/tmp/$USER/.ssh_data"
    echo "ssh auth sock info found"
    eval "$(<$SSH_INFO_DIR/ssh_agent_last_data)"
    echo "ssh-agent sock info exported to ENV variables"
  fi
}

check-ssh-add() {
  if [[ ! "$SSH_AUTH_SOCK" ]]; then
    SSH_INFO_DIR="/tmp/$USER/.ssh_data"
    echo "ssh auth sock info found"
    eval "$(<$SSH_INFO_DIR/ssh_agent_last_data)"
    echo "ssh-agent sock info exported to ENV variables"
  fi
  if ! ssh-add -l >/dev/null; then
    ssh-add -t 8h
    echo "Keys were added to an agent for 8 hours"
  fi
}

get-ssh-hostname() {
  local ssh_host=''
  if [[ $# == 1 ]]; then
    ssh_host="$@"
  else
    ssh_host=$(echo "$@" | perl -ne 'print if s/.*\s(.*?@.*?)\s.*/\1/')
  fi
  # Try one more time
  if [[ "$ssh_host" == "" ]]; then
    ssh_host=$(echo "$@" | perl -ne 'print if s/.*\s([^-].*?)\s.*/\1/')
  fi
  echo "${ssh_host}"
}

ssh() {
  check-ssh-agent
  check-ssh-add
  local W_NAME=$(tmux display-message -p '#W')
  local SSH_HOST=$(get-ssh-hostname $@)
  tmux rename-window "ssh:$SSH_HOST"
  /usr/bin/ssh $@
  tmux rename-window $W_NAME
}

git() {
  if [[ $1 =~ (clone|remote|ru|remote) ]]; then
    check-ssh-agent
    check-ssh-add
  fi
  /usr/bin/git $@
}
