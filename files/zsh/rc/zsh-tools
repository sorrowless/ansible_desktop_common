# VirtualenvWrapper
#export WORKON_HOME=~/.virtualenvs
#if [ -f /usr/bin/virtualenvwrapper.sh ]; then
#  source /usr/bin/virtualenvwrapper.sh
#else
#  echo "virtualenvwrapper script for Python not found, skip load it"
#fi
#unset GREP_OPTIONS

# use 'up' script instead of typing cd ../../../.. endlessly
# UPTOOL="${HOME}/.config/up/up.sh"
# if [ ! -f "${UPTOOL}" ]; then
#   echo "'up' script does not exist, download it"
#   curl --create-dirs -o "${UPTOOL}" https://raw.githubusercontent.com/sorrowless/up/master/up.sh 2>/dev/null
#   chmod u+x "${UPTOOL}"
#   source "${UPTOOL}"
# else
#   source "${UPTOOL}"
# fi

# I always use tmux, so put it here
TPM="${HOME}/.tmux/plugins/tpm"
if [ ! -d "${TPM}" ]; then
  echo "Tmux plugin manager does not loaded, download it"
  git clone https://github.com/tmux-plugins/tpm "${TPM}"
fi

# Rbenv activation
if command -v rbenv 1>/dev/null 2>&1; then
  eval "$(rbenv init -)"
fi

# Nodenv activation
if command -v nodenv 1>/dev/null 2>&1; then
  eval "$(nodenv init -)"
fi

# Search based on peco history
if (( $+commands[peco] )); then
  ZSH_PECO_HISTORY_DEDUP=1
  if ! (( ${+ZSH_PECO_HISTORY_OPTS} )); then
    ZSH_PECO_HISTORY_OPTS="--layout=bottom-up"
  fi

  function peco_select_history() {
    local parse_cmd

    if (( $+commands[gtac] )); then
      parse_cmd="gtac"
    elif (( $+commands[tac] )); then
      parse_cmd="tac"
    else
      parse_cmd="tail -r"
    fi

    if [ -n "$ZSH_PECO_HISTORY_DEDUP" ]; then
      if (( $+commands[perl] )); then
        parse_cmd="$parse_cmd | perl -ne 'print unless \$seen{\$_}++'"
      elif (( $+commands[awk] )); then
        parse_cmd="$parse_cmd | awk '!seen[\$0]++'"
      else
        parse_cmd="$parse_cmd | uniq"
      fi
    fi

    BUFFER=$(fc -l -n 1 | eval $parse_cmd | \
               peco ${=ZSH_PECO_HISTORY_OPTS} --query "$LBUFFER")

    CURSOR=$#BUFFER # move cursor
    zle -R -c       # refresh
  }

  zle -N peco_select_history
  bindkey '^R' peco_select_history
fi

export GPG_TTY=$(tty)

if command -v vivid 1>/dev/null 2>&1; then
  export LS_COLORS="$(vivid generate solarized-dark)"
else
  echo "Seems you do not have 'vivid' command installed, using standard LS_COLORS"
fi
